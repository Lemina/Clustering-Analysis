# import the needed libraries

from pandas import Series, DataFrame
import pandas as pd
import numpy as np
import os
import matplotlib.pylab as plt
import sklearn.metrics
from sklearn.metrics import classification_report
from sklearn.tree import DecisionTreeClassifier
from sklearn.cross_validation import train_test_split

# Getting and cleaning data

AH_data = pd.read_csv(“/home/lemina/Downloads/tree_addhealth.csv”)
data_clean = AH_data.dropna()

# Set the Predictors/ Input variables / Features

predictors =data_clean[[‘PARPRES’,'marever1’]]

#Set the target variable 

targets = data_clean.EXPEL1

# 60% of the data will be considered for trainin and 40% for testing

pred_train, pred_test, tar_train, tar_test  =   train_test_split(predictors, targets, test_size=.4)

#Setting the classifier

classifier=DecisionTreeClassifier()
classifier=classifier.fit(pred_train,tar_train)

predictions=classifier.predict(pred_test)

sklearn.metrics.confusion_matrix(tar_test,predictions)
sklearn.metrics.accuracy_score(tar_test, predictions)

# Generate the decision tree

# Import the needed libraries for the display of the decision tree
from sklearn import tree
import io
from io import StringIO
from IPython.display import Image
import pydotplus


out = io.BytesIO()
tree.export_graphviz(classifier, out_file=out)
graph=pydotplus.graph_from_dot_data(out.getvalue())
Image(graph.create_png())



